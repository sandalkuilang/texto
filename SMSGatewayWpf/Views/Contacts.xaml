<!--
    SMS Gateway desktop client
 
    Copyright (C) 2014 Yudha - yudha_hyp@yahoo.com
-->
<UserControl x:Class="SMSGatewayWpf.Views.Contacts"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="800">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />
                <ResourceDictionary Source="../Styles/ButtonStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Border Background="{DynamicResource HeaderMenu}" 
                BorderThickness="0,1,0,1"  
                BorderBrush="{StaticResource BorderContent}">
            
            <TextBox Margin="5,8,0,8"
                Name="txtSearch"
                VerticalAlignment="Stretch"
                Width="188" 
                HorizontalAlignment="Left"
                Grid.Row="0" Grid.Column="0"
                Text="{Binding Path=SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Controls:TextBoxHelper.Watermark="Search"
                Style="{DynamicResource SearchMetroTextBox}"
                diag:PresentationTraceSources.TraceLevel="High">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyUp">
                        <i:InvokeCommandAction Command="{Binding Path=SearchCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Border>

        <Border Grid.Row="0" Grid.Column="1" 
                Background="{DynamicResource HeaderMenu}" 
                BorderThickness="0,1,0,1"  
                BorderBrush="{StaticResource BorderContent}">
            <Grid Margin="10 0 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <!-- Command here -->
                    <Button Margin="0 5 10 5" BorderThickness="0" Width="115" Height="40" Foreground="#D15948" Background="Transparent">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center"  Source="../Images/dark.contact.add.png"/>
                            <TextBlock FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.FontWeight="Normal">Add Contact</TextBlock>
                        </StackPanel>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding Path=ShowComposeDialog.ComposeCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Margin="0 5 10 5" BorderThickness="0" Width="80" Height="40" Foreground="#D15948" Background="Transparent">
                        <StackPanel Orientation="Horizontal">
                            <Image Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center"  Source="../Images/dark.delete.png"/>
                            <TextBlock FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.FontWeight="Normal">Delete</TextBlock>
                        </StackPanel>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction 
                                    Command="{Binding Path=DeleteCommand}" 
                                    CommandParameter="{Binding ElementName=listContact, Path=SelectedItem}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button> 
                </StackPanel>
            </Grid>
        </Border>

        <DataGrid x:Name="listContact" AutoGenerateColumns="False" CanUserAddRows="False" Grid.Row="1" Grid.ColumnSpan="2"
                  GridLinesVisibility="Horizontal" Focusable="False" IsTextSearchEnabled="True"
                  ItemsSource="{Binding Path=Source, UpdateSourceTrigger=PropertyChanged}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding Path=MouseDoubleClickCommand}" CommandParameter="{Binding ElementName=listContact, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Edit"
                              Command="{Binding Path=EditCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                    <MenuItem Header="Delete"
                              Command="{Binding Path=DeleteCommand}" 
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTemplateColumn CanUserResize="False">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=SelectAll, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox Margin="9 0 0 0"   
                                      IsChecked="{Binding Path=IsSelected, UpdateSourceTrigger=PropertyChanged}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTextColumn Width="50" IsReadOnly="True" Header="ID" Visibility="Hidden" Binding="{Binding ID}"/>
                <DataGridTextColumn Width="220" IsReadOnly="True" Header="Name" Binding="{Binding Name}" />
                <DataGridTextColumn Width="120" IsReadOnly="True" Header="Number" Binding="{Binding PhoneNumber}"/> 
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
