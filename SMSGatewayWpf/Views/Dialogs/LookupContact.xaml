<Controls:MetroWindow x:Class="SMSGatewayWpf.Views.Dialogs.LookupContact"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:rules="clr-namespace:SMSGatewayWpf.ViewModels.ValidationRules"   
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:styles="clr-namespace:SMSGatewayWpf.Styles"
        WindowStartupLocation="CenterScreen"  
        ShowMaxRestoreButton="False"
        ShowMinButton="False"
        ResizeMode="NoResize"  
        GlowBrush="{DynamicResource AccentColorBrush}"
        Title="Lookup" Height="420" Width="480">

    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Styles/ButtonStyle.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Control.Resources>

    <Grid RenderOptions.ClearTypeHint="Enabled" TextOptions.TextFormattingMode="Display"
          VerticalAlignment="Stretch">
        <Border BorderBrush="LightBlue" BorderThickness="1" Margin="0,0,0,0" VerticalAlignment="Stretch" Height="Auto">
            <Controls:TransitioningContentControl Width="Auto" x:Name="transitionComposeContact"
                Transition="Left" Margin="9,-1,-9,1">

                <Grid Margin="20,20,30,20" >
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Margin" Value="0 0 0 10" />
                        </Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Margin" Value="0 0 0 10" />
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="10" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBox  
                        Grid.Row="0" Grid.Column="0"
                        Text="{Binding Path=SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Controls:TextBoxHelper.Watermark="Search"
                        Style="{DynamicResource SearchMetroTextBox}"
                        diag:PresentationTraceSources.TraceLevel="High" Margin="0,0,0,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding Path=SearchCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <Border BorderBrush="LightBlue" BorderThickness="1" Grid.Row="2" VerticalAlignment="Stretch" Height="240">
                        <DataGrid x:Name="listContact" AutoGenerateColumns="False" CanUserAddRows="False"  
                          GridLinesVisibility="Horizontal" Focusable="False" IsTextSearchEnabled="True"
                          ItemsSource="{Binding Path=Source, UpdateSourceTrigger=PropertyChanged}">
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding Path=MouseDoubleClickCommand}" CommandParameter="{Binding ElementName=listContact, Path=SelectedItem}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                            <!--<DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Edit"
                                        Command="{Binding Path=EditCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                                    <MenuItem Header="Delete"
                                        Command="{Binding Path=DeleteCommand}" 
                                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>-->
                            <DataGrid.Columns>
                                <DataGridTemplateColumn CanUserResize="False">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=SelectAll, UpdateSourceTrigger=PropertyChanged}">
                                                <!--<i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked" >
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type Control}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type Control}}}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Unchecked" >
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type Control}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type Control}}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>-->
                                            </CheckBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox Margin="9 0 0 0"   
                                      IsChecked="{Binding Path=IsSelected, UpdateSourceTrigger=PropertyChanged}" >
                                                <!--<i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Checked" >
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type Control}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type Control}}}"/>
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Unchecked" >
                                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type Control}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type Control}}}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>-->
                                            </CheckBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn Width="50" IsReadOnly="True" Header="ID" Visibility="Hidden" Binding="{Binding ID}"/>
                                <DataGridTextColumn Width="200" IsReadOnly="True" Header="Name" Binding="{Binding Name}" />
                                <DataGridTextColumn Width="120" IsReadOnly="True" Header="Number" Binding="{Binding PhoneNumber}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>

                    <StackPanel Grid.Row="3" 
                                Orientation="Horizontal" Margin="0 15 0 0">
                        <Button x:Name="btnOK" Content="OK" 
                                Click="btnOK_Click"
                                Command="{Binding OkCommand}"
                                CommandParameter="{Binding}"
                                Width="215" Height="60"
                                Margin="0 0 5 0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                />
                        <Button x:Name="btnCancel" Content="Cancel" 
                                Width="215" Height="60"
                                Margin="0 0 5 0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Click="btnCancel_Click"/>

                        <Controls:ProgressRing Width="25" Height="25" 
                                                   IsActive="{Binding Path=IsBusy, UpdateSourceTrigger=PropertyChanged}" 
                                                   Margin="20,0,0,0" 
                                                   HorizontalAlignment="Left"/>
                    </StackPanel>

                </Grid>

            </Controls:TransitioningContentControl>
        </Border>
    </Grid>
</Controls:MetroWindow>
