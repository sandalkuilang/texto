<!--
    SMS Gateway desktop client
 
    Copyright (C) 2014 Yudha - yudha_hyp@yahoo.com
-->
<UserControl x:Class="SMSGatewayWpf.Views.Message.Outbox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="900">
    <Grid>
        
        <Grid.Resources> 
            <CollectionViewSource x:Key="MessageCollectionViewSource" Source="{Binding Path=Source, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </CollectionViewSource>
        </Grid.Resources>

        <!--<ListView x:Name="OutboxMessages" ItemsSource="{Binding Source={StaticResource MessageCollectionViewSource}}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding Path=MouseDoubleClickCommand}" CommandParameter="{Binding ElementName=OutboxMessages, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Forward"
                              Command="{Binding Path=ForwardCommand}" 
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}"/>
                    <MenuItem Header="Delete"
                              Command="{Binding Path=DeleteCommand}" 
                              CommandParameter="O"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn>
                        <GridViewColumn.HeaderTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Path=SelectAll, UpdateSourceTrigger=PropertyChanged}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Checked" >
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unchecked" >
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                            </DataTemplate>
                        </GridViewColumn.HeaderTemplate>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox  
                                      IsChecked="{Binding Path=IsSelected, UpdateSourceTrigger=PropertyChanged}" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Checked" >
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unchecked" >
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumnHeader Content="Sender" Width="100" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=From}" TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumnHeader Content="Receiver" Width="100" Visibility="Hidden"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=Receiver}" TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumnHeader Content="Receiver" Width="100"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=To}" TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumnHeader Content="Message" Width="480" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=Message}" TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumnHeader Content="Time" Width="160" />
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=Time}" TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>-->
       

        <DataGrid x:Name="OutboxMessages" AutoGenerateColumns="False" CanUserAddRows="False"
                  GridLinesVisibility="Horizontal" 
                  VerticalScrollBarVisibility="Visible" 
                  EnableColumnVirtualization ="True"
                  EnableRowVirtualization="True"
                  ItemsSource="{Binding Source,  UpdateSourceTrigger=PropertyChanged}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding Path=MouseDoubleClickCommand}" CommandParameter="{Binding ElementName=OutboxMessages, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Forward"
                              Command="{Binding Path=ForwardCommand}" 
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}"/>
                    <MenuItem Header="Delete"
                              Command="{Binding Path=DeleteCommand}" 
                              CommandParameter="O"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTemplateColumn CanUserResize="False">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Path=SelectAll, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedHeaderCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox Margin="9 0 0 0" 
                                      IsChecked="{Binding Path=IsSelected, UpdateSourceTrigger=PropertyChanged}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked" >
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.CheckedRowCommand,
                                            RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding Path=DataContext.Source, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Sender" Width="100" IsReadOnly="True" Binding="{Binding Sender}" Visibility="Hidden"/>
                <DataGridTextColumn Header="Sender" Width="100" IsReadOnly="True" Binding="{Binding From}"/>
                <DataGridTextColumn Header="Receiver" Width="100" IsReadOnly="True" Binding="{Binding Receiver}" Visibility="Hidden"/>
                <DataGridTextColumn Header="Receiver" Width="100" IsReadOnly="True" Binding="{Binding To}"/>
                <DataGridTextColumn Header="Message" IsReadOnly="True" Binding="{Binding Message}" Width="480" />
                <DataGridTextColumn Header="Time" IsReadOnly="True" Binding="{Binding Time}" Width="160" />
            </DataGrid.Columns>
        </DataGrid> 
        
    </Grid>
</UserControl>
